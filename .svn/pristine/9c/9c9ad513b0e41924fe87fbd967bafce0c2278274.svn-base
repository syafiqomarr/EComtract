package com.ssm.llp.ezbiz.model;

// Generated Aug 15, 2016 3:52:32 PM by Hibernate Tools 3.4.0.CR1

import java.lang.reflect.Field;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.apache.commons.lang.StringUtils;
import org.hibernate.envers.Audited;

import com.ssm.webis.param.RobFormMainInfo;

/**
 * RobFormB3 generated by hbm2java
 */
@Entity
@Audited
@Table(name = "rob_form_b3")
public class RobFormB3 implements java.io.Serializable {

	private long robFormB3Id;
	private String robFormBCode;
	private Long cbsBranchId;
	private String addr;
	private String addr2;
	private String addr3;
	private String addrTown;
	private String addrPostcode;
	private String addrState;
	private String addrUrl;
	// private String branchStatus;
	private Date createDt;
	private String createBy;
	private Date updateDt;
	private String updateBy;
	private String ammendmentType;
	private Date b3AmmendmendDt;

	public RobFormB3() {
	}

	public RobFormB3(long robFormB3Id, String robFormBCode, Date createDt, String createBy, Date updateDt, String updateBy) {
		this.robFormB3Id = robFormB3Id;
		this.robFormBCode = robFormBCode;
		this.createDt = createDt;
		this.createBy = createBy;
		this.updateDt = updateDt;
		this.updateBy = updateBy;
	}

	public RobFormB3(long robFormB3Id, String robFormBCode, Long cbsBranchId, String addr, String addr2, String addr3, String addrTown,
			String addrPostcode, String addrState, String ammendmentType, Date createDt, String createBy, Date updateDt, String updateBy) {
		this.robFormB3Id = robFormB3Id;
		this.robFormBCode = robFormBCode;
		this.cbsBranchId = cbsBranchId;
		this.addr = addr;
		this.addr2 = addr2;
		this.addr3 = addr3;
		this.addrTown = addrTown;
		this.addrPostcode = addrPostcode;
		this.addrState = addrState;
		this.ammendmentType = ammendmentType;
		this.createDt = createDt;
		this.createBy = createBy;
		this.updateDt = updateDt;
		this.updateBy = updateBy;
	}

	@Id
	@Column(name = "rob_form_b3_id", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.AUTO)
	public long getRobFormB3Id() {
		return this.robFormB3Id;
	}

	public void setRobFormB3Id(long robFormB3Id) {
		this.robFormB3Id = robFormB3Id;
	}

	@Column(name = "rob_form_b_code", nullable = false, length = 25)
	public String getRobFormBCode() {
		return this.robFormBCode;
	}

	public void setRobFormBCode(String robFormBCode) {
		this.robFormBCode = robFormBCode;
	}

	@Column(name = "cbs_branch_id")
	public Long getCbsBranchId() {
		return this.cbsBranchId;
	}

	public void setCbsBranchId(Long cbsBranchId) {
		this.cbsBranchId = cbsBranchId;
	}

	@Column(name = "addr", length = 70)
	public String getAddr() {
		return this.addr;
	}

	public void setAddr(String addr) {
		this.addr = addr;
	}

	@Column(name = "addr2", length = 70)
	public String getAddr2() {
		return this.addr2;
	}

	public void setAddr2(String addr2) {
		this.addr2 = addr2;
	}

	@Column(name = "addr3", length = 70)
	public String getAddr3() {
		return this.addr3;
	}

	public void setAddr3(String addr3) {
		this.addr3 = addr3;
	}

	@Column(name = "addr_town", length = 20)
	public String getAddrTown() {
		return this.addrTown;
	}

	public void setAddrTown(String addrTown) {
		this.addrTown = addrTown;
	}

	@Column(name = "addr_postcode", length = 5)
	public String getAddrPostcode() {
		return this.addrPostcode;
	}

	public void setAddrPostcode(String addrPostcode) {
		this.addrPostcode = addrPostcode;
	}

	@Column(name = "addr_state", length = 2)
	public String getAddrState() {
		return this.addrState;
	}

	public void setAddrState(String addrState) {
		this.addrState = addrState;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_dt", nullable = false, length = 3594)
	public Date getCreateDt() {
		return this.createDt;
	}

	public void setCreateDt(Date createDt) {
		this.createDt = createDt;
	}

	@Column(name = "create_by", nullable = false, length = 50)
	public String getCreateBy() {
		return this.createBy;
	}

	public void setCreateBy(String createBy) {
		this.createBy = createBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_dt", nullable = false, length = 3594)
	public Date getUpdateDt() {
		return this.updateDt;
	}

	public void setUpdateDt(Date updateDt) {
		this.updateDt = updateDt;
	}

	@Column(name = "update_by", nullable = false, length = 50)
	public String getUpdateBy() {
		return this.updateBy;
	}

	public void setUpdateBy(String updateBy) {
		this.updateBy = updateBy;
	}

	@Column(name = "ammendment_type", length = 2)
	public String getAmmendmentType() {
		return ammendmentType;
	}

	public void setAmmendmentType(String ammendmentType) {
		this.ammendmentType = ammendmentType;
	}

	@Transient
	public Date getB3AmmendmendDt() {
		return b3AmmendmendDt;
	}

	public void setB3AmmendmendDt(Date b3AmmendmendDt) {
		this.b3AmmendmendDt = b3AmmendmendDt;
	}

	public void emptyObject() {
		Class c1 = getClass();
		Field[] fields = c1.getDeclaredFields();

		for (Field field : fields) {
			try {
				if (field.getType().getCanonicalName() == "boolean") {
					field.set(this, false);
				} else if (field.getType().getCanonicalName() == "char") {
					field.set(this, '\u0000');
				} else if ((field.getType().isPrimitive())) {
					field.set(this, 0);
				} else {
					field.set(this, null);
				}
			} catch (Exception ex) {

			}
		}
	}
	
	
	public boolean compareToMainAddr(RobFormMainInfo compareTo){
		if(!convertTrim(compareTo.getBizMainAddr()).equals(convertTrim(getAddr()))){
			return false;
		}
		if(!convertTrim(compareTo.getBizMainAddr2()).equals(convertTrim(getAddr2()))){
			return false;
		}
		if(!convertTrim(compareTo.getBizMainAddr3()).equals(convertTrim(getAddr3()))){
			return false;
		}
		if(!convertTrim(compareTo.getBizMainAddrPostcode()).equals(convertTrim(getAddrPostcode()))){
			return false;
		}
		if(!convertTrim(compareTo.getBizMainAddrTown()).equals(convertTrim(getAddrTown()))){
			return false;
		}
		if(!convertTrim(compareTo.getBizMainAddrState()).equals(convertTrim(getAddrState()))){
			return false;
		}
		return true;
	}
	
	public boolean compareToB1MainAddr(RobFormB1 compareTo){
		if(!convertTrim(compareTo.getBizMainAddr()).equals(convertTrim(getAddr()))){
			return false;
		}
		if(!convertTrim(compareTo.getBizMainAddr2()).equals(convertTrim(getAddr2()))){
			return false;
		}
		if(!convertTrim(compareTo.getBizMainAddr3()).equals(convertTrim(getAddr3()))){
			return false;
		}
		if(!convertTrim(compareTo.getBizMainAddrPostcode()).equals(convertTrim(getAddrPostcode()))){
			return false;
		}
		if(!convertTrim(compareTo.getBizMainAddrTown()).equals(convertTrim(getAddrTown()))){
			return false;
		}
		if(!convertTrim(compareTo.getBizMainAddrState()).equals(convertTrim(getAddrState()))){
			return false;
		}
		return true;
	}
	
	public boolean compareTo(RobFormB3 compareTo){
		if(!convertTrim(compareTo.getAddr()).equals(convertTrim(getAddr()))){
			return false;
		}
		if(!convertTrim(compareTo.getAddr2()).equals(convertTrim(getAddr2()))){
			return false;
		}
		if(!convertTrim(compareTo.getAddr3()).equals(convertTrim(getAddr3()))){
			return false;
		}
		if(!convertTrim(compareTo.getAddrPostcode()).equals(convertTrim(getAddrPostcode()))){
			return false;
		}
		if(!convertTrim(compareTo.getAddrTown()).equals(convertTrim(getAddrTown()))){
			return false;
		}
		if(!convertTrim(compareTo.getAddrState()).equals(convertTrim(getAddrState()))){
			return false;
		}
		return true;
	}
	
	private String convertTrim(String str){
		if(str==null){
			return "";
		}
		str = str.replaceAll("[^a-zA-Z0-9]", "");
		return str;
	}

	@Column(name = "addr_url")
	public String getAddrUrl() {
		return addrUrl;
	}

	public void setAddrUrl(String addrUrl) {
		this.addrUrl = addrUrl;
	}

}
