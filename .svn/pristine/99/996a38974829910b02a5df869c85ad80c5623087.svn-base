package com.ssm.llp.ezbiz.model;

import java.util.ArrayList;

// Generated Nov 30, 2012 9:49:47 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;

import com.ssm.llp.base.common.model.LlpFileData;
import com.ssm.llp.mod1.model.LlpUserProfile;

/**
 * LlpUserProfile generated by hbm2java
 */
@Entity
@Table(name = "rob_user_activation_tray")
public class RobUserActivationTray implements java.io.Serializable {

	private String appRefNo;
	private String userRefNo;
	private String status;
	private LlpFileData mykadDocId;
	private LlpFileData selfieDocId;
	private LlpFileData supportingDocId;
	private String lockBy;
	private Date lockDt;
	private Date createDt;
	private String createBy;
	private Date updateDt;
	private String updateBy;
	private Date processDt;
	private String processBy;
	private String processNote;
	private String processBranch;
	private Date reSubmitDt;
	private long rowVersion;
	
	private LlpUserProfile llpUserProfile;
	private List<RobFormNotes> listRobFormNotes = new ArrayList<RobFormNotes>(0);
	
	public RobUserActivationTray() {
	}

	
	@Id
    @GenericGenerator(name="ref_no", strategy="com.ssm.llp.base.hibernate.LlpIdGenerator", 
    parameters={@Parameter(name = "genCode", value = "USER_ACTIVATION_TRAY"),
    			@Parameter(name = "fieldCode", value = "UA"),
    			@Parameter(name = "moduleCode", value = "T"),
    			@Parameter(name = "yearMonthDay", value = "yyyyMMdd"),
    			@Parameter(name = "lastNoPattern", value = "000000")})
    @GeneratedValue(generator="ref_no")
	@Column(name = "app_ref_no", nullable = false, length = 25)
	public String getAppRefNo() {
		return appRefNo;
	}

	public void setAppRefNo(String appRefNo) {
		this.appRefNo = appRefNo;
	}

	
	@Column(name = "user_ref_no")
	public String getUserRefNo() {
		return userRefNo;
	}

	public void setUserRefNo(String userRefNo) {
		this.userRefNo = userRefNo;
	}

	@Column(name = "status")
	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@OneToOne(fetch = FetchType.LAZY, cascade=CascadeType.ALL)
    @JoinColumn(name="mykad_doc_id")
	@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
	public LlpFileData getMykadDocId() {
		return mykadDocId;
	}

	public void setMykadDocId(LlpFileData mykadDocId) {
		this.mykadDocId = mykadDocId;
	}

	@OneToOne(fetch = FetchType.LAZY, cascade=CascadeType.ALL)
    @JoinColumn(name="selfie_doc_id")
	@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
	public LlpFileData getSelfieDocId() {
		return selfieDocId;
	}

	public void setSelfieDocId(LlpFileData selfieDocId) {
		this.selfieDocId = selfieDocId;
	}

	@OneToOne(fetch = FetchType.LAZY, cascade=CascadeType.ALL)
    @JoinColumn(name="supporting_doc_id")
	@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
	public LlpFileData getSupportingDocId() {
		return supportingDocId;
	}

	public void setSupportingDocId(LlpFileData supportingDocId) {
		this.supportingDocId = supportingDocId;
	}

	@Column(name = "lock_by")
	public String getLockBy() {
		return lockBy;
	}

	public void setLockBy(String lockBy) {
		this.lockBy = lockBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lock_dt",  length = 3594)
	public Date getLockDt() {
		return lockDt;
	}

	public void setLockDt(Date lockDt) {
		this.lockDt = lockDt;
	}


	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_dt", nullable = false, length = 3594)
	public Date getCreateDt() {
		return createDt;
	}

	public void setCreateDt(Date createDt) {
		this.createDt = createDt;
	}

	@Column(name = "create_by")
	public String getCreateBy() {
		return createBy;
	}

	public void setCreateBy(String createBy) {
		this.createBy = createBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_dt", nullable = false, length = 3594)
	public Date getUpdateDt() {
		return updateDt;
	}

	public void setUpdateDt(Date updateDt) {
		this.updateDt = updateDt;
	}

	@Column(name = "update_by")
	public String getUpdateBy() {
		return updateBy;
	}

	public void setUpdateBy(String updateBy) {
		this.updateBy = updateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "process_dt",  length = 3594)
	public Date getProcessDt() {
		return processDt;
	}

	public void setProcessDt(Date processDt) {
		this.processDt = processDt;
	}

	@Column(name = "process_by")
	public String getProcessBy() {
		return processBy;
	}

	public void setProcessBy(String processBy) {
		this.processBy = processBy;
	}

	@Column(name = "process_note")
	public String getProcessNote() {
		return processNote;
	}

	public void setProcessNote(String processNote) {
		this.processNote = processNote;
	}

	@OneToOne(fetch = FetchType.EAGER)
	@JoinColumn(name="user_ref_no", insertable = false, updatable = false)
	public LlpUserProfile getLlpUserProfile() {
		return llpUserProfile;
	}

	public void setLlpUserProfile(LlpUserProfile llpUserProfile) {
		this.llpUserProfile = llpUserProfile;
	}


	@OneToMany(fetch = FetchType.EAGER, mappedBy = "robFormCode")
	@OrderBy("robFormNoteId ASC")
	public List<RobFormNotes> getListRobFormNotes() {
		return listRobFormNotes;
	}

	public void setListRobFormNotes(List<RobFormNotes> listRobFormNotes) {
		this.listRobFormNotes = listRobFormNotes;
	}


	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "re_submit_dt",  length = 3594)
	public Date getReSubmitDt() {
		return reSubmitDt;
	}


	public void setReSubmitDt(Date reSubmitDt) {
		this.reSubmitDt = reSubmitDt;
	}

	@Column(name = "process_branch")
	public String getProcessBranch() {
		return processBranch;
	}


	public void setProcessBranch(String processBranch) {
		this.processBranch = processBranch;
	}

	@Version
	@Column(name = "row_version")
	public long getRowVersion() {
		return rowVersion;
	}

	public void setRowVersion(long rowVersion) {
		this.rowVersion = rowVersion;
	}
	

}
