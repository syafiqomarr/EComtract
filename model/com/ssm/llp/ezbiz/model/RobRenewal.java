package com.ssm.llp.ezbiz.model;


// Generated Aug 4, 2015 4:58:53 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.Version;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;

import com.ssm.base.model.BaseDataModel;
import com.ssm.llp.base.common.model.LlpFileData;

/**
 * RobRenewal generated by hbm2java
 */
@Entity
@Table(name = "rob_renewal")
@Audited
public class RobRenewal extends BaseDataModel implements java.io.Serializable {

	private String transCode;
	private String brNo;
	private String chkDigit;
	private String bizName;
	private String bizType;
	private String cmpNo;
	private boolean declareChk = false;
	private Date expDate;
	private int branchCount;
	private int yearRenew;
	private double cmpAmt;
	private double totalAmt;
//	private double bizInfoAmt;
	private String status;
	private Date paymentDt;
	private boolean isPaidCmp = false;
	private String isBuyInfo = com.ssm.llp.base.common.Parameter.YES_NO_yes;
//	private byte[] certData;
//	private Date certDataReqDt;
	private LlpFileData certFileData;
	private LlpFileData cmpFileData;
	private LlpFileData formA1FileData;
	private LlpFileData businessInfoData;
	private Date newExpDate;
	private double gstAmt;
	private double businessInfoAmt;
	private String renewalIncentive = com.ssm.llp.base.common.Parameter.YES_NO_no;
	private String approveRejectNotes;
	private Date approveRejectDt;
	private String prosessingBranch;
	private String isFromSSMPc =  com.ssm.llp.base.common.Parameter.YES_NO_no;
	private long rowVersion;
	
	public RobRenewal() {
	}

	public RobRenewal(String transCode, Date createDt, String createBy,
			Date updateDt, String updateBy) {
		this.transCode = transCode;
	}

	public RobRenewal(String transCode, String brNo, String chkDigit,
			String bizName, String bizType, Date expDate, int branchCount,
			int yearRenew, double cmpAmt, double totalAmt, String status,
			Date createDt, String createBy, Date updateDt, String updateBy,
			String renewalIncentive, Date approveRejectDt, String approveRejectNotes) {
		this.transCode = transCode;
		this.brNo = brNo;
		this.chkDigit = chkDigit;
		this.bizName = bizName;
		this.bizType = bizType;
		this.expDate = expDate;
		this.branchCount = branchCount;
		this.yearRenew = yearRenew;
		this.cmpAmt = cmpAmt;
		this.totalAmt = totalAmt;
		this.status = status;
		this.renewalIncentive = renewalIncentive;
		this.approveRejectDt = approveRejectDt;
		this.approveRejectNotes = approveRejectNotes;
	}

	@Id
    @GenericGenerator(name="ref_no", strategy="com.ssm.llp.base.hibernate.LlpIdGenerator", 
    parameters={@Parameter(name = "genCode", value = "ROB_RENEWAL_RUNNING_NO"),
    			@Parameter(name = "fieldCode", value = "ROB_RENEW"),
    			@Parameter(name = "moduleCode", value = "05"),
    			@Parameter(name = "yearMonthDay", value = "yyyyMMdd"),
    			@Parameter(name = "lastNoPattern", value = "000000")})
    @GeneratedValue(generator="ref_no")
	@Column(name = "trans_code", nullable = false, length = 50)
	public String getTransCode() {
		return this.transCode;
	}

	public void setTransCode(String transCode) {
		this.transCode = transCode;
	}

	@Column(name = "br_no", length = 10)
	public String getBrNo() {
		return this.brNo;
	}

	public void setBrNo(String brNo) {
		this.brNo = brNo;
	}

	@Column(name = "chk_digit", length = 2)
	public String getChkDigit() {
		return this.chkDigit;
	}

	public void setChkDigit(String chkDigit) {
		this.chkDigit = chkDigit;
	}

	@Column(name = "biz_name", length = 100)
	public String getBizName() {
		return this.bizName;
	}

	public void setBizName(String bizName) {
		this.bizName = bizName;
	}

	@Column(name = "biz_type", length = 2)
	public String getBizType() {
		return this.bizType;
	}

	public void setBizType(String bizType) {
		this.bizType = bizType;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "exp_date", length = 2052)
	public Date getExpDate() {
		return this.expDate;
	}

	public void setExpDate(Date expDate) {
		this.expDate = expDate;
	}

	@Column(name = "branch_count")
	public int getBranchCount() {
		return this.branchCount;
	}

	public void setBranchCount(int branchCount) {
		this.branchCount = branchCount;
	}

	@Column(name = "year_renew")
	public int getYearRenew() {
		return this.yearRenew;
	}

	public void setYearRenew(int yearRenew) {
		this.yearRenew = yearRenew;
	}

	@Column(name = "cmp_amt", precision = 16, scale=2)
	public double getCmpAmt() {
		return this.cmpAmt;
	}

	public void setCmpAmt(double cmpAmt) {
		this.cmpAmt = cmpAmt;
	}

	@Column(name = "total_amt", precision = 16, scale=2)
	public double getTotalAmt() {
		return this.totalAmt;
	}

	public void setTotalAmt(double totalAmt) {
		this.totalAmt = totalAmt;
	}

	@Column(name = "status", length = 10)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "is_paid_cmp")
	public boolean isPaidCmp() {
		return isPaidCmp;
	}

	public void setPaidCmp(boolean isPaidCmp) {
		this.isPaidCmp = isPaidCmp;
	}

//	@Column(name = "cert_data")
//	@Basic(fetch = FetchType.LAZY)
//	public byte[] getCertData() {
//		return certData;
//	}
//
//	public void setCertData(byte[] certData) {
//		this.certData = certData;
//	}
//
//	@Temporal(TemporalType.TIMESTAMP)
//	@Column(name = "cert_data_req_dt", length = 3594)
//	public Date getCertDataReqDt() {
//		return certDataReqDt;
//	}
//
//	public void setCertDataReqDt(Date certDataReqDt) {
//		this.certDataReqDt = certDataReqDt;
//	}

	@Column(name = "declare_chk")
	public boolean isDeclareChk() {
		return declareChk;
	}

	public void setDeclareChk(boolean declareChk) {
		this.declareChk = declareChk;
	}

	
	@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
	@OneToOne(fetch = FetchType.LAZY, cascade=CascadeType.ALL)
    @JoinColumn(name="cert_file_data_id")
	public LlpFileData getCertFileData() {
		return certFileData;
	}

	public void setCertFileData(LlpFileData certFileData) {
		this.certFileData = certFileData;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "new_exp_date", length = 2052)
	public Date getNewExpDate() {
		return newExpDate;
	}

	public void setNewExpDate(Date newExpDate) {
		this.newExpDate = newExpDate;
	}

	@OneToOne(fetch = FetchType.LAZY, cascade=CascadeType.ALL)
    @JoinColumn(name="cmp_file_data_id")
	@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
	public LlpFileData getCmpFileData() {
		return cmpFileData;
	}

	public void setCmpFileData(LlpFileData cmpFileData) {
		this.cmpFileData = cmpFileData;
	}

	@OneToOne(fetch = FetchType.LAZY, cascade=CascadeType.ALL)
    @JoinColumn(name="forma1_file_data_id")
	@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
	public LlpFileData getFormA1FileData() {
		return formA1FileData;
	}

	public void setFormA1FileData(LlpFileData formA1FileData) {
		this.formA1FileData = formA1FileData;
	}

	@Column(name = "cmp_no", length = 50)
	public String getCmpNo() {
		return cmpNo;
	}

	public void setCmpNo(String cmpNo) {
		this.cmpNo = cmpNo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "payment_date", length = 2052)
	public Date getPaymentDt() {
		return paymentDt;
	}

	public void setPaymentDt(Date paymentDt) {
		this.paymentDt = paymentDt;
	}
	
	@OneToOne(fetch = FetchType.LAZY, cascade=CascadeType.ALL)
    @JoinColumn(name="business_info_data_id")
	@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
	public LlpFileData getBusinessInfoData() {
		return businessInfoData;
	}

	public void setBusinessInfoData(LlpFileData businessInfoData) {
		this.businessInfoData = businessInfoData;
	}

	@Column(name = "is_buy_info", length=1)
	public String isBuyInfo() {
		return isBuyInfo;
	}

	public void setBuyInfo(String isBuyInfo) {
		this.isBuyInfo = isBuyInfo;
	}
	
	@Column(name = "gst_amt", precision = 16, scale=2)
	public double getGstAmt() {
		return gstAmt;
	}

	public void setGstAmt(double gstAmt) {
		this.gstAmt = gstAmt;
	}
	
	@Column(name = "business_info_amt", precision = 16, scale=2)
	public double getBusinessInfoAmt() {
		return businessInfoAmt;
	}

	public void setBusinessInfoAmt(double businessInfoAmt) {
		this.businessInfoAmt = businessInfoAmt;
	}

	@Column(name = "renewal_incentive")
	public String getRenewalIncentive() {
		return renewalIncentive;
	}

	public void setRenewalIncentive(String renewalIncentive) {
		this.renewalIncentive = renewalIncentive;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "approve_reject_dt")
	public Date getApproveRejectDt() {
		return approveRejectDt;
	}

	public void setApproveRejectDt(Date approveRejectDt) {
		this.approveRejectDt = approveRejectDt;
	}
	
	@Column(name = "approve_reject_notes")
	public String getApproveRejectNotes() {
		return approveRejectNotes;
	}

	public void setApproveRejectNotes(String approveRejectNotes) {
		this.approveRejectNotes = approveRejectNotes;
	}
	
	@Column(name = "prosessing_branch", length = 5)
	public String getProsessingBranch() {
		return prosessingBranch;
	}

	public void setProsessingBranch(String prosessingBranch) {
		this.prosessingBranch = prosessingBranch;
	}
	
	@Version
	@Column(name = "row_version")
	public long getRowVersion() {
		return rowVersion;
	}

	public void setRowVersion(long rowVersion) {
		this.rowVersion = rowVersion;
	}

	@Column(name = "is_from_ssm_pc") 
	public String getIsFromSSMPc() {
		return isFromSSMPc;
	}

	public void setIsFromSSMPc(String isFromSSMPc) {
		this.isFromSSMPc = isFromSSMPc;
	}
	
	@Transient
	public String getBrNoWithCheckDigit(){
		return getBrNo()+"-"+getChkDigit();
	}
	
}
